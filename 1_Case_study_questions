Case Study Questions


CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09')
  ;
  

-- What is the total amount each customer spent at the restaurant?

select s.customer_id AS customer, sum(price) as total_spent
from sales as s
left join menu on s.product_id = menu.product_id
group by customer
order by total_spent desc;


-- How many days has each customer visited the restaurant?

select customer_id as customer, count(distinct(order_date)) as days_visit
from sales
group by customer;


-- What was the first item from the menu purchased by each customer?
SELECT sales.customer_id AS customer, menu.product_name AS first_item_purchased, order_date
FROM sales
LEFT JOIN menu ON sales.product_id = menu.product_id
WHERE sales.order_date = ANY (
        SELECT MIN(order_date) 
        FROM sales 
        GROUP BY customer_id
);


-- What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT product_name AS product, COUNT(product_name) AS times_purchased
FROM sales s 
JOIN menu m 
ON s.product_id = m.product_id
GROUP BY product_name
ORDER BY times_purchased DESC
LIMIT 1
;

-- Which item was the most popular for each customer?
SELECT s.customer_id AS client, m.product_name AS product, COUNT(m.product_name) AS number_of_times
FROM sales AS s
JOIN menu AS m
ON s.product_id = m.product_id
GROUP BY client, product_name
ORDER BY number_of_times DESC;

-- Which item was purchased first by the customer after they became a member?
With Rank as
(
Select  S.customer_id,
        M.product_name,
	Dense_rank() OVER (Partition by S.Customer_id Order by S.Order_date) as Rank
From Sales S
Join Menu M
ON m.product_id = s.product_id
JOIN Members Mem
ON Mem.Customer_id = S.customer_id
Where S.order_date >= Mem.join_date  
)
Select *
From Rank
Where Rank = 1;

-- Which item was purchased just before the customer became a member?
With Rank as
(
Select  S.customer_id,
        M.product_name,
	Dense_rank() OVER (Partition by S.Customer_id Order by S.Order_date) as Rank
From Sales S
Join Menu M
ON m.product_id = s.product_id
JOIN Members Mem
ON Mem.Customer_id = S.customer_id
Where S.order_date <= Mem.join_date  
)
Select *
From Rank
Where Rank = 1;

-- What is the total items and amount spent for each member before they became a member?
SELECT sales.customer_id AS customer, COUNT(sales.product_id) AS quantity, SUM(menu.price) AS expense 
FROM sales
JOIN menu ON sales.product_id = menu.product_id
JOIN members ON sales.customer_id = members.customer_id
WHERE sales.order_date < members.join_date
GROUP BY customer
;
-- If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
WITH points AS (
    SELECT *,
    CASE WHEN product_id = 1 THEN price * 20
    ELSE price * 10
    END AS points
    FROM menu
    )
SELECT sales.customer_id, SUM(points.points)
FROM sales
JOIN points ON sales.product_id = points.product_id
GROUP BY sales.customer_id;

-- In the first week after a customer joins the program (including their join date) they earn 2x points on all items, 
-- not just sushi - how many points do customer A and B have at the end of January?

WITH dates AS (
    SELECT *, 
        join_date + CAST('6 days' AS INTERVAL) AS valid_date,
        date('2021-01-31') AS last_date
    FROM members AS m
    )
SELECT s.customer_id,
        SUM(
            CASE
            WHEN m.product_id = 1 THEN m.price * 20
            WHEN s.order_date BETWEEN dates.join_date AND dates.valid_date THEN m.price * 20
            ELSE price * 10
            END
        ) AS points
FROM dates
JOIN sales AS s
ON dates.customer_id = s.customer_id
JOIN menu AS m
ON m.product_id = s.product_id
WHERE s.order_date < dates.last_date
GROUP BY s.customer_id

;
